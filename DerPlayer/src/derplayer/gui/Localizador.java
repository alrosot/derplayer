/*
 * Localizador.java
 *
 * Created on 8 de Fevereiro de 2008, 20:23
 */
package derplayer.gui;

import derplayer.Main;
import derplayer.Musica;
import derplayer.Musica;
import derplayer.PlayList;
import java.awt.Dimension;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  Andoreh
 */
public class Localizador extends javax.swing.JFrame {

    static Localizador instanciaAtual;
    private static List teclasNeutras;

    public static void exibir() {
        if (instanciaAtual == null) {
            instanciaAtual = new Localizador();
        }
        instanciaAtual.limpar();
        instanciaAtual.setVisible(true);
    }

    /** Creates new form Localizador */
    public Localizador() {
        initComponents();

        if (teclasNeutras == null) {
            teclasNeutras = new ArrayList();
            teclasNeutras.add(KeyEvent.VK_LEFT);
            teclasNeutras.add(KeyEvent.VK_RIGHT);
            teclasNeutras.add(KeyEvent.VK_UP);
            teclasNeutras.add(KeyEvent.VK_DOWN);

            teclasNeutras.add(KeyEvent.VK_ALT);
            teclasNeutras.add(KeyEvent.VK_ALT_GRAPH);
            teclasNeutras.add(KeyEvent.VK_CONTROL);
            teclasNeutras.add(KeyEvent.VK_SHIFT);
            teclasNeutras.add(KeyEvent.VK_CAPS_LOCK);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        campoBusca = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaResultados = new javax.swing.JTable();

        setTitle("Encontrar música...");
        setBounds(getPosicao());
        setIconImage(Main.getImage());

        jLabel1.setText("Procurar por");

        campoBusca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                campoBuscaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoBuscaKeyReleased(evt);
            }
        });

        tabelaResultados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Músicas encontradas"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaResultados.setShowHorizontalLines(false);
        tabelaResultados.setShowVerticalLines(false);
        tabelaResultados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaResultadosMouseClicked(evt);
            }
        });
        tabelaResultados.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tabelaResultadosFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaResultados);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoBusca, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(campoBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private Rectangle getPosicao(){
        int largura = 300;
        int altura = 360;
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();          
        Rectangle retorno = new Rectangle((int)screenSize.getWidth()-largura-10,(int)screenSize.getHeight()-altura-62,largura,altura);
        return retorno;        
    }
    
    private void limpar(){
        campoBusca.setText(null);
        
        DefaultTableModel modelo = (DefaultTableModel) tabelaResultados.getModel();
         while(modelo.getRowCount()>0){
                modelo.removeRow(0);
         }
    }
    
    private void selecionaLInha(int novaSelecao){
        tabelaResultados.setRowSelectionInterval(novaSelecao, novaSelecao);
        Rectangle r = tabelaResultados.getCellRect(novaSelecao, 0, true);
        tabelaResultados.scrollRectToVisible(r);        
    }

private void campoBuscaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoBuscaKeyReleased
    
    DefaultTableModel modelo = (DefaultTableModel) tabelaResultados.getModel();
    int totalLinhasAntes = modelo.getRowCount();
    int teclaPressionada = evt.getKeyCode();
    int linhaSelecionada = tabelaResultados.getSelectedRow();
    
    if (teclasNeutras.contains(teclaPressionada)) {
        return;
    }

    if (teclaPressionada == KeyEvent.VK_ENTER){     
        if(linhaSelecionada>=0){
            Musica musica = (Musica) tabelaResultados.getValueAt(linhaSelecionada, 0);
            Main.getPlayList().tocar(musica);
            this.dispose();
        }
        return;
    }
        
    String palavraBuscada = campoBusca.getText().trim().toLowerCase();
        
    List<Musica> musicas = Main.getPlayList().consultarListaMusicas();  
    
    while(modelo.getRowCount() > 0){
        modelo.removeRow(0);
    }
    
    for(Musica arquivo : musicas){
        if(arquivo.getInfo().toLowerCase().indexOf(palavraBuscada) >= 0){            
            modelo.addRow(new Object[]{arquivo});            
        }
    }   
    
    int totalLinhasAgora = modelo.getRowCount();
    if (totalLinhasAgora > 0) {
        if(totalLinhasAntes == totalLinhasAgora){
            selecionaLInha(linhaSelecionada);
        } else {
            selecionaLInha(0);
        }
    }          
}//GEN-LAST:event_campoBuscaKeyReleased

private void tabelaResultadosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tabelaResultadosFocusGained
    campoBusca.requestFocus();    
}//GEN-LAST:event_tabelaResultadosFocusGained

private void campoBuscaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoBuscaKeyPressed
    
    DefaultTableModel modelo = (DefaultTableModel) tabelaResultados.getModel();
    
    int teclaPressionada = evt.getKeyCode();
    int linhaSelecionada = tabelaResultados.getSelectedRow();
    
    final int linhasPag = (int) (tabelaResultados.getVisibleRect().getHeight() / tabelaResultados.getRowHeight());
            
    if(teclaPressionada == KeyEvent.VK_DOWN){     
        int novaSelecao = linhaSelecionada+1;
        if(novaSelecao >= modelo.getRowCount()){
            novaSelecao = modelo.getRowCount()-1;
        }
        selecionaLInha(novaSelecao);        
        return;
    }
    
    if(teclaPressionada == KeyEvent.VK_UP){     
        int novaSelecao = linhaSelecionada-1;
        if(novaSelecao <= 0){
            novaSelecao = 0;
        }
        selecionaLInha(novaSelecao);
        return;
    }
    
    if(teclaPressionada == KeyEvent.VK_PAGE_DOWN){     
        int novaSelecao = linhaSelecionada + linhasPag;
        if(novaSelecao >= modelo.getRowCount()){
            novaSelecao = modelo.getRowCount()-1;
        }
        selecionaLInha(novaSelecao);        
        return;
    }
    
    if(teclaPressionada == KeyEvent.VK_PAGE_UP){     
        int novaSelecao = linhaSelecionada - linhasPag;
        if(novaSelecao <= 0){
            novaSelecao = 0;
        }
        selecionaLInha(novaSelecao);
        return;
    }
    
    if(teclaPressionada == KeyEvent.VK_ESCAPE){     
        this.dispose();
    }

    if (teclasNeutras.contains(teclaPressionada)) {
        return;
    }
}//GEN-LAST:event_campoBuscaKeyPressed

private void tabelaResultadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaResultadosMouseClicked
    int linhaSelecionada = tabelaResultados.getSelectedRow();
    if (linhaSelecionada >= 0) {
        Musica musica = (Musica) tabelaResultados.getValueAt(linhaSelecionada, 0);
        Main.getPlayList().tocar(musica);
        this.dispose();
    }        
}//GEN-LAST:event_tabelaResultadosMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField campoBusca;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tabelaResultados;
    // End of variables declaration//GEN-END:variables

}
